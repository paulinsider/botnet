# options.cfg
#
# configuration file for advanced flow data capture


# File Format 
#
# There should be a single command on each line.  Commands have the
# form "command" or "command = value", where value can be a boolean,
# an integer, or a string (with no quotes around strings).  If
# "command = 1" is valid, then "command" is a synonym for "command =
# 1".  Omitting "command" from the file is the same as "command = 0".
# Whitespace is unimportant.

# Network options
# 
# An interface must be specified for live data capture; linux uses
# eth0 and wlan0, MacOS uses en0.  Can be set to "auto", which is
# recommended, since it will then select an active, non-loopback
# interface automatically.  It can also be set to "none", in which
# case the interface must be specified on the command line, via the
# "-l" option.
interface = auto

# Promiscuous mode will monitor traffic sent to any destination, not
# just the observation point
promisc = 0

# Output options
#
# output = the file to which flow records are written
# output = /var/log/darkstar
output = auto   

# outdir sets the directory to which flow record output files are
# written
outdir = /usr/local/var/joy

# logfile sets the secondary output stsream, that is, the file to
# which error/warnings/info/debug statements will be sent; if this
# value is "none", then stderr will be used
logfile = /usr/local/var/log/joy.log

# count = the number of flow records that will be obtained before the
# capture file is rotated; if this number is nonzero, then files will
# be rotated, and the n-th output file will have "-n" appended to it
count = 100

# SSH/rsync user and server; if this is set, then capture files will
# be uploaded after rotation 
# upload = data@fqdn:path

# SSH identity (private key) file used to authenticate to the "upload"
# server; the corresponding public key file must be present in the
# ~/.ssh/authorized_hosts file on that server
#
# example key generation: ssh-keygen -b 2048 -f upload-key -P "" 
keyfile = /usr/local/etc/joy/upload-key

# retain=1 causes a local copy of the capture file to be retained
# after it is uploaded
retain = 1

# Data options
#
# bidir=1 causes flow stitching between directions to take place, so
# that flows will be reported as bidirectional (though flows with no
# matching reverse-direction twin will still be reported as
# unidirectional)
bidir = 1

# Sequence of Application Lengths and Times (SALT) and Sequence of
# Packet Lengths and Times (SPLT) options
#
# num_pkts is the maximum number of entries in the SALT and SPLT
# arrays; it can be set to 0, or up to 200 (depending on compilation
# options)
#
# if num_pkts=0, then no lengths and times will be reported
num_pkts = 200

# type=1 is SPLT, type = 2 is SALT
type = 1

# zeros=1 causes the zero-length messages to be included in length
# and time arrays
zeros = 0

# Byte Distribution options
#
# dist=1 causes the byte count distribution to be reported
dist = 1

# entropy=1 causes the entropy to be reported
entropy = 1

# Executable/process information
#
# exe=1 causes the path name of the executable associated with a flow
# that originates/terminates on the host to be included in the flow
# record
#
exe = 1


# Transport Layer Security (TLS) options
# 
# tls=1 causes TLS application data lengths and times and ciphersuites
# to be reported
tls = 1

# Initial Data Packet (IDP)
# 
# idp=<num> causes <num> bytes of the initial data packet of each
# unidirectional flow to be reported; setting idp to zero causes no
# such data to be reported; idp=1460 is a good example
idp = 1500

# Passive Operating System inference inference
#
# set p0f=sock, where "sock" is a UNIX socket used to communicate
# between p0f and client processes; p0f should be run with the "-s
# sock" argument
#
# p0f = sock

# Traffic Selection
#
# if bpf is set to a Berkeley Packet Filter (BPF) expression, then
# only traffic matching that expression will be reported on, e.g.
# "bpf = tcp port 443 or ip host 216.34.181.45".  Leave bpf unset to
# observe all IP traffic.
bpf = none


# Anonymization
#
# when anon is set to the name of a file that contains a subnet (in
# address/number of bits in mask format) on each line, that file is 
# read in; anon=internal.net anonymizes the RFC 1918 private addresses
#anon = none 
anon = /usr/local/etc/joy/internal.net

# TLS Fingerprinting
#
# This is the path to the file that will be used by Joy
# as the known dataset upon which TLS flow fingerprinting
# will match entries. If you have placed a custom file in a different
# location, then specify the full path here.
fingerprint_file_tls = /usr/local/etc/joy/tls_fingerprint.json

# Verbosity
# 
# verbosity = 0 -> silent
# verbosity = 1 -> report a summary of each packet
# verbosity = 2 -> report on all data of each packet
verbosity = 2

